apply plugin: 'java-platform'
apply plugin: 'maven-publish'

repositories{
    mavenCentral()
}

javaPlatform{
    allowDependencies();
}

dependencies {
    // Import other BOMs
    api platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    runtime platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    api platform("org.springframework.boot:spring-boot-dependencies:${springBootDependenciesVersion}")

    // Define version for dependencies not managed by the above BOMs
     constraints {

     }
    api group: 'org.mapstruct',name: 'mapstruct',version: "${mapstructVersion}"
    api group: 'org.projectlombok',name: 'lombok', version: "${lombokVersion}"
    api group: 'org.projectlombok',name: 'lombok-mapstruct-binding', version: "${lombokMapstructBindingVersion}"
    api "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    api "org.springdoc:springdoc-openapi-ui:1.6.9"


}
buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            allowInsecureProtocol true
            name ""
            url  ""
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.owasp:dependency-check-gradle:6.1.6"

    }
}

publishing {
    repositories {
        maven {
            url = "https://maven.pkg.github.com/e2rabi/IShop"
            credentials {
                username = "errabi.ayoub@gmail.com"
                password = "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"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "com.errabi"
            artifactId = "ishop-bom"
            version = "${ishopBomVersion}"

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    name 'My BOM'
                    description 'IShop Bill of Materials (BOM)'

                    dependencyManagement {
                        dependencies {
                            project.configurations.each { conf ->
                                conf.dependencies.each { dep ->
                                    dependency {
                                        groupId "${dep.group}"
                                        artifactId "${dep.name}"
                                        version "${dep.version}"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}