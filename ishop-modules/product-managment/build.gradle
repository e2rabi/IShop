plugins {
	id "com.google.protobuf" version "0.9.2"
	id "groovy"
}

def grpcVersion = '1.29.0'

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.12.2'
	}

	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

dependencies {
	implementation "io.grpc:grpc-netty:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'
	// Load bill of materials (BOM).
	// The dependencies in the BOM will be
	// dependency constraints in this build.
	implementation enforcedPlatform("com.errabi:ishop-bom:${ishopBomVersion}")
	implementation project(':ishop-common:common-sdk')

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.data:spring-data-elasticsearch'
	implementation 'net.devh:grpc-server-spring-boot-starter:2.12.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.mapstruct:mapstruct'
	implementation group: 'org.projectlombok',name: 'lombok'

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	implementation group: 'com.google.guava', name: 'guava',version: '23.6-jre'
	implementation group: 'org.postgresql', name: 'postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.2-M3-groovy-4.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.2-M3-groovy-4.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testRuntimeOnly 'com.h2database:h2'
}
test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}
test{
	useJUnitPlatform()
}
